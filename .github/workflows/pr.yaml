name: continuous-integration

on: pull_request

jobs:
  ctest-win:
    env:
      BUILD_DIR: build
      BUILD_TYPE: Release
    runs-on: windows-latest
    steps:
    - name: Get the Code 
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build
    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source
      # and build directories, but this is only available with CMake 3.13 and higher.
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: |
        cmake --version
        cmake "${GITHUB_WORKSPACE}" -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" ..
    - name: Make
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake --build . --config "${BUILD_TYPE}"
    - name: Test
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        ctest -C "${BUILD_TYPE}"

  ctest-mac:
    runs-on: macos-latest
    env:
      BUILD_DIR: mac-build
    steps:
    - name: get-buffy
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: make-buffy
      run: |
        cmake -B "${BUILD_DIR}" -S . -DCMAKE_BUILD_TYPE=Debug
        cmake --build "${BUILD_DIR}" --config Debug
    - name: ctest
      working-directory: ${{env.BUILD_DIR}}
      run: ctest

  ctest-linux:
    runs-on: ubuntu-20.04
    env:
      BUILD_DIR: build
    steps:
    - name: get-buffy
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: get-build-deps
      run: |
        sudo apt-get install -y valgrind
    - name: make-buffy
      run: |
        env
        cmake -B "${BUILD_DIR}" -S . -DCMAKE_BUILD_TYPE=Debug
        cmake --build "${BUILD_DIR}"
    - name: ctest
      working-directory: ${{env.BUILD_DIR}}
      run: ctest
    - name: ctest-valgrind
      working-directory: ${{env.BUILD_DIR}}
      run: ctest -D ExperimentalMemCheck

  scan-build-linux:
    runs-on: ubuntu-20.04
    env:
      BUILD_DIR: scan-build
    steps:
    - name: get-buffy
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: get-build-deps
      run: |
        sudo apt-get install -y cmake clang-tools
    - name: scan-build-cmake
      run: |
        env
        scan-build cmake -B "${BUILD_DIR}" -S . -DCMAKE_BUILD_TYPE=Debug
    - name: scan-build-make
      working-directory: ${{env.BUILD_DIR}}
      run: |
        scan-build --status-bugs make

