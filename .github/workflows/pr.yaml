name: continuous-integration

on: pull_request

jobs:
  ctest:
    env:
      BUILD_TYPE: Debug
      SOURCE_DIR: '${{github.workspace}}'
      BUILD_DIR: '${{github.workspace}}/build'
    strategy:
      matrix:
        os: ['macos-latest', 'ubuntu-20.04', 'windows-latest']
    runs-on: ${{ matrix.os }}
    steps:
    - name: Dump Env
      run: |
        env
    - name: Get Dev Dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew tap LouisBrunner/valgrind
        brew install --HEAD LouisBrunner/valgrind/valgrind
    - name: Get Dev Dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-20.04'
      run: sudo apt-get install -y valgrind
    - name: Get Source
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Make Makefiles
      shell: bash
      run: |
        cmake --version
        cmake -E make_directory "${BUILD_DIR}"
        cmake -S "${SOURCE_DIR}" -B "${BUILD_DIR}" -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" -DCMAKE_VERBOSE_MAKEFILE:BOOL='ON'
    - name: Make Buffy
      shell: bash
      run: |
        cmake --build "${BUILD_DIR}" --config "${BUILD_TYPE}"
    - name: CTest (Windows)
      if: matrix.os == 'windows-latest'
      working-directory: ${{env.BUILD_DIR}}
      run: ctest --output-on-failure
    - name: CTest with Valgrind (macOS, Ubuntu)
      working-directory: ${{env.BUILD_DIR}}
      if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-20.04'
      shell: bash
      run: "${SOURCE_DIR}/tests/ctest-valgrind-runner.sh"

  scan-build-linux:
    runs-on: ubuntu-20.04
    env:
      BUILD_DIR: scan-build
    steps:
    - name: get-buffy
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: get-build-deps
      run: |
        sudo apt-get install -y cmake clang-tools
    - name: scan-build-cmake
      run: |
        env
        scan-build cmake -B "${BUILD_DIR}" -S . -DCMAKE_BUILD_TYPE=Debug
    - name: scan-build-make
      working-directory: ${{env.BUILD_DIR}}
      run: |
        scan-build --status-bugs make

